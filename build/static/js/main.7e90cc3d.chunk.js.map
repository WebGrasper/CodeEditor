{"version":3,"sources":["components/Editor.js","utils/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","storedValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAWe,SAASA,EAAOC,GAAQ,IAC7BC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SADF,EAEZC,oBAAS,GAFG,mBAE7BC,EAF6B,KAEvBC,EAFuB,KAYpC,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZN,EACD,4BACEO,KAAK,SACLD,UAAU,sBACVE,QAXR,WACEH,GAASD,KAYH,kBAAC,IAAD,CAAiBK,KAAML,EAAOM,IAAgBC,QAGlD,kBAAC,aAAD,CACEC,eArBN,SAAsBC,EAAQC,EAAMb,GAClCC,EAASD,IAqBLA,MAAOA,EACPK,UAAU,sBACVS,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,MAAO,WACPC,aAAa,MC1CR,SAASC,EAAgBC,EAAKC,GAAe,IAAD,EAC/BpB,oBAAS,WACjC,IAAMqB,EAAcC,aAAaC,QAAQJ,GACzC,OAAOE,EAAcG,KAAKC,MAAMJ,GAAeD,KAHQ,mBAClDtB,EADkD,KAC3C4B,EAD2C,KAUzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQT,EAAKK,KAAKK,UAAU/B,MACxC,CAACqB,EAAKrB,IAEF,CAACA,EAAO4B,GCgDFI,MAxDf,WAAgB,IAAD,EACWZ,EAAgB,OAAQ,IADnC,mBACNa,EADM,KACAC,EADA,OAESd,EAAgB,MAAO,IAFhC,mBAENe,EAFM,KAEDC,EAFC,OAGOhB,EAAgB,KAAM,IAH7B,mBAGNiB,EAHM,KAGFC,EAHE,OAIepC,mBAAS,IAJxB,mBAINqC,EAJM,KAIEC,EAJF,KAoBb,OAdAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKhC,UAAU,iBACb,kBAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAOiC,EACPhC,SAAUiC,IAEZ,kBAACtC,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,kBAACxC,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOqC,EACPpC,SAAUqC,KAGd,yBAAKjC,UAAU,QACb,4BACEkC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YChDjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7e90cc3d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\n\nexport default function Editor(props) {\n  const { language, displayName, value, onChange } = props;\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  function toggleOpen() {\n    setOpen(!open);\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={toggleOpen}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react'\n\nexport default function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n    const storedValue = localStorage.getItem(key)\n    return storedValue ? JSON.parse(storedValue) : initialValue\n  })\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../utils/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}